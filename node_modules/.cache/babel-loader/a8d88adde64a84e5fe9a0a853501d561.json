{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/App.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport AuthContext from './shared/context/auth-context';\nlet logoutTimer;\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userId = _useState4[0],\n        setUserId = _useState4[1];\n\n  const login = useCallback((userId, token, expirationDate) => {\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: userId,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n    setUserId(userId);\n    setToken(token);\n  }, []);\n  const logout = useCallback(() => {\n    setToken(false);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  useEffect(() => {\n    if (token) {\n      setTimeout(logout);\n    }\n  }, [token, logout]);\n  let routes;\n\n  if (token) {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(UserPlaces, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(NewPlace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/places/:placeId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(UpdatePlace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  } else {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(UserPlaces, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Auth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      login: login,\n      logout: logout,\n      userId: userId\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, routes)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/buzina/√Årea de Trabalho/reactproject/src/App.js"],"names":["React","useState","useCallback","useEffect","BrowserRouter","Router","Route","Redirect","Switch","Users","NewPlace","UserPlaces","MainNavigation","UpdatePlace","Auth","AuthContext","logoutTimer","App","token","setToken","userId","setUserId","login","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","storedData","parse","getItem","setTimeout","routes","isLoggedIn"],"mappings":"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","sourcesContent":["import React ,{useState,useCallback,useEffect} from 'react';\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport UpdatePlace from './places/pages/UpdatePlace';\n\nimport Auth from './user/pages/Auth';\n\nimport AuthContext from './shared/context/auth-context'\n\nlet logoutTimer;\n\nconst App=()=> {\n\n  const [token,setToken]=useState(false);\n  const [userId,setUserId]=useState(false);\n\n  const login=useCallback((userId,token,expirationDate)=>{\n    const tokenExpirationDate=expirationDate||new Date(new Date().getTime()+1000*60*60);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({userId:userId,token:token,expiration:tokenExpirationDate.toISOString()})\n    );\n    setUserId(userId);\n    setToken(token);\n  },[])\n\n  const logout=useCallback(()=>{\n    setToken(false);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  },[])\n\n  useEffect(()=>{\n    const storedData=JSON.parse(localStorage.getItem('userData'));\n    if(storedData && storedData.token && new Date(storedData.expiration)>new Date()){\n      login(storedData.userId,storedData.token,new Date(storedData.expiration));\n    }\n  },[login])\n\n  useEffect(()=>{\n    if(token){\n      setTimeout(logout);\n    }\n  },[token,logout]);\n\n  let routes;\n\n  if(token){\n    routes=(\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n          </Route>\n          <Route path=\"/places/:placeId\">\n              <UpdatePlace />\n          </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }else{\n    routes=(\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n              <Auth />\n            </Route>\n          <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn:!!token,token:token , login: login, logout: logout, userId:userId}}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n            {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}