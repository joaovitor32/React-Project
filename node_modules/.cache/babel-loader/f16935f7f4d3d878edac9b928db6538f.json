{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/shared/components/FormElements/ImageUpload.js\";\nimport React, { useRef, useState } from 'react';\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const filePickerRef = useRef();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewUrl = _useState4[0],\n        setPreviewUrl = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isValid = _useState6[0],\n        setIsValid = _useState6[1];\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files || event.target.files === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n      return;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: props.id,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    ref: filePickerRef,\n    accept: \".jpg,.png,.jpeg\",\n    onChange: pickedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"\",\n    alt: \"Preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Pick Image\")));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/shared/components/FormElements/ImageUpload.js"],"names":["React","useRef","useState","Button","ImageUpload","props","filePickerRef","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","pickImageHandler","current","click","pickedHandler","event","pickedFile","fileIsValid","target","files","onInput","id","display","center"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,QAAtB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAG;AACxB,QAAMC,aAAa,GAACL,MAAM,EAA1B;;AADwB,oBAEHC,QAAQ,EAFL;AAAA;AAAA,QAEjBK,IAFiB;AAAA,QAEZC,OAFY;;AAAA,qBAGSN,QAAQ,EAHjB;AAAA;AAAA,QAGjBO,UAHiB;AAAA,QAGNC,aAHM;;AAAA,qBAIGR,QAAQ,CAAC,KAAD,CAJX;AAAA;AAAA,QAIjBS,OAJiB;AAAA,QAITC,UAJS;;AAMxB,QAAMC,gBAAgB,GAAC,MAAI;AACvBP,IAAAA,aAAa,CAACQ,OAAd,CAAsBC,KAAtB;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAGC,KAAK,IAAG;AAC1B,QAAIC,UAAJ;AACA,QAAIC,WAAW,GAACR,OAAhB;;AACA,QAAGM,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAoBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAqB,CAA5C,EAA8C;AAC1CH,MAAAA,UAAU,GAACD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACAb,MAAAA,OAAO,CAACU,UAAD,CAAP;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAO,MAAAA,WAAW,GAAC,IAAZ;AACA;AACH,KAND,MAMK;AACDP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,MAAAA,WAAW,GAAC,KAAZ;AACH;;AACDd,IAAAA,KAAK,CAACiB,OAAN,CAAcjB,KAAK,CAACkB,EAApB,EAAuBL,UAAvB,EAAkCC,WAAlC;AACH,GAdD;;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAEd,KAAK,CAACkB,EADd;AAEI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,GAAG,EAAElB,aAJT;AAKI,IAAA,MAAM,EAAC,iBALX;AAMI,IAAA,QAAQ,EAAEU,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAK,IAAA,SAAS,EAAG,gBAAeX,KAAK,CAACoB,MAAN,IAAgB,QAAS,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEZ,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CATJ,CADJ;AAkBH,CA5CD;;AA8CA,eAAeT,WAAf","sourcesContent":["import React,{useRef, useState} from 'react';\nimport Button from './Button'\nimport './ImageUpload.css'\n\nconst ImageUpload = props =>{\n    const filePickerRef=useRef();\n    const [file,setFile]=useState();\n    const [previewUrl,setPreviewUrl]=useState();\n    const [isValid,setIsValid]=useState(false);\n    \n    const pickImageHandler=()=>{\n        filePickerRef.current.click();\n    }\n\n    const pickedHandler = event =>{\n        let pickedFile;\n        let fileIsValid=isValid;\n        if(event.target.files||event.target.files===1){\n            pickedFile=event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid=true;\n            return;\n        }else{\n            setIsValid(false);\n            fileIsValid=false;\n        }\n        props.onInput(props.id,pickedFile,fileIsValid);\n    }\n\n    return (\n        <div className=\"form-control\">\n            <input \n                id={props.id} \n                style={{display:'none'}} \n                type=\"file\"\n                ref={filePickerRef} \n                accept=\".jpg,.png,.jpeg\"\n                onChange={pickedHandler}\n            />    \n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    <img src=\"\" alt=\"Preview\"/>\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}