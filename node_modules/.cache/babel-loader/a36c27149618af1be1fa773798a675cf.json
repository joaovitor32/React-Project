{"ast":null,"code":"import _objectSpread from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/user/pages/Auth.js\";\nimport React, { useState } from 'react';\nimport './Auth.css';\nimport Card from '../../shared/components/UIEelements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/Validators';\nimport { useForm } from '../../shared/hooks/form-hook';\n\nconst Auth = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoginMode = _useState2[0],\n        setIsLoginMode = _useState2[1];\n\n  const _useForm = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 3),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1],\n        setFormData = _useForm2[2];\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData(_objectSpread({}, formState.inputs, {\n        name: {\n          value: '',\n          isValid: false\n        }\n      }), false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE],\n    errorText: \"Enter a name...\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","isLoginMode","setIsLoginMode","email","value","isValid","password","formState","inputHandler","setFormData","switchModeHandler","name","undefined","inputs","prevMode","authSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nimport './Auth.css';\n\nimport Card from '../../shared/components/UIEelements/Card'\nimport Input from '../../shared/components/FormElements/Input'\nimport Button from '../../shared/components/FormElements/Button'\nimport {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE} from '../../shared/components/util/Validators'\nimport {useForm} from '../../shared/hooks/form-hook'\n\n\nconst Auth = () => {\n    \n    const [isLoginMode,setIsLoginMode]=useState(true);\n    \n    const [formState, inputHandler,setFormData] = useForm(\n      {\n        email: {\n          value: '',\n          isValid: false\n        },\n        password: {\n          value: '',\n          isValid: false\n        }\n      },\n      false\n    );\n  \n    const switchModeHandler=()=>{\n        if(!isLoginMode){\n            setFormData({\n                name:undefined,\n\n            },formState.inputs.email.isValid && formState.inputs.password.isValid);\n        }else{\n            setFormData({\n                ...formState.inputs,\n                name:{\n                    value:'',\n                    isValid:false\n                }\n            },false)\n        }\n        setIsLoginMode(prevMode=>!prevMode);\n    } \n\n    const authSubmitHandler = event => {\n      event.preventDefault();\n      console.log(formState.inputs);\n    };\n  \n    return (\n      <Card className=\"authentication\">\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && \n            <Input\n                element=\"input\"\n                id=\"name\"\n                type=\"text\" \n                label=\"Your Name\"\n                validators={[VALIDATOR_REQUIRE]}\n                errorText=\"Enter a name...\"\n                onInput={inputHandler}\n            />\n          }\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode?'LOGIN':'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n            SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    );\n  };\n  \n  export default Auth;"]},"metadata":{},"sourceType":"module"}