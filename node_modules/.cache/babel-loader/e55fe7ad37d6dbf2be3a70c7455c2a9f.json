{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PlaceForm.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/components/util/Validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIstLoadding = _useState2[1];\n\n  const placeId = useParams().placeId;\n\n  const _useForm = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 3),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1],\n        setFormData = _useForm2[2];\n\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    setFormData({\n      title: {\n        value: identifiedPlace.title,\n        isValid: true\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true\n      }\n    }, true);\n    setIstLoadding(false);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Could not find place!\"));\n  }\n\n  if (!isLoading) {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Loading!\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","useState","isLoading","setIstLoadding","placeId","value","isValid","formState","inputHandler","setFormData","identifiedPlace","find","p","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport './PlaceForm.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH} from '../../shared/components/util/Validators'\nimport {useForm} from '../../shared/hooks/form-hook'\nconst DUMMY_PLACES = [\n    {\n      id: 'p1',\n      title: 'Empire State Building',\n      description: 'One of the most famous sky scrapers in the world!',\n      imageUrl:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n      address: '20 W 34th St, New York, NY 10001',\n      location: {\n        lat: 40.7484405,\n        lng: -73.9878584\n      },\n      creator: 'u1'\n    },\n    {\n      id: 'p2',\n      title: 'Empire State Building',\n      description: 'One of the most famous sky scrapers in the world!',\n      imageUrl:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n      address: '20 W 34th St, New York, NY 10001',\n      location: {\n        lat: 40.7484405,\n        lng: -73.9878584\n      },\n      creator: 'u2'\n    }\n  ];\n  \n  const UpdatePlace = () => {\n  \n    const [isLoading,setIstLoadding]=useState(true);\n  \n    const placeId = useParams().placeId;\n  \n    const [formState, inputHandler,setFormData] = useForm(\n      {\n        title: {\n          value: '',\n          isValid: false\n        },\n        description: {\n          value: '',\n          isValid: false\n        }\n      },\n      false\n    );\n      \n    const identifiedPlace=DUMMY_PLACES.find(p=>p.id===placeId) \n    \n    useEffect(()=>{\n      setFormData({\n        title: {\n          value: identifiedPlace.title,\n          isValid: true\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true\n        }\n      },true)\n      setIstLoadding(false);\n    },[setFormData,identifiedPlace])\n  \n    const placeUpdateSubmitHandler = event => {\n      event.preventDefault();\n      console.log(formState.inputs);\n    };\n  \n    if (!identifiedPlace) {\n      return (\n        <div className=\"center\">\n          <h2>Could not find place!</h2>\n        </div>\n      );\n    }\n  \n    if(!isLoading){\n      return (\n        <div className=\"center\">\n          <h2>Loading!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.title.value}\n          initialValid={formState.inputs.title.isValid}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (min. 5 characters).\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.description.value}\n          initialValid={formState.inputs.description.isValid}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLACE\n        </Button>\n      </form>\n    );\n  };\n  \n  export default UpdatePlace;"]},"metadata":{},"sourceType":"module"}