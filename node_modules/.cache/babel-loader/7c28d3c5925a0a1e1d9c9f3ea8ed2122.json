{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/UserPlaces.js\";\nimport React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIEelements/ErrorModal';\n\nconst UserPlaces = () => {\n  9;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadedPlaces = _useState2[0],\n        setLoadedPlaces = _useState2[1];\n\n  const _useHttpClient = useHttpClient(),\n        isLoading = _useHttpClient.isLoading,\n        error = _useHttpClient.error,\n        sendRequest = _useHttpClient.sendRequest,\n        clearError = _useHttpClient.clearError;\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`, 'GET');\n        setLoadedPlaces(responseData);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(PlaceList, {\n    items: loadedPlaces,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/UserPlaces.js"],"names":["React","useEffect","PlaceList","useParams","useHttpClient","ErrorModal","UserPlaces","useState","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,gDAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAI;AAAC;;AAAD,oBACmBC,QAAQ,EAD3B;AAAA;AAAA,QACZC,YADY;AAAA,QACCC,eADD;;AAAA,yBAEiCL,aAAa,EAF9C;AAAA,QAEZM,SAFY,kBAEZA,SAFY;AAAA,QAEDC,KAFC,kBAEDA,KAFC;AAAA,QAEMC,WAFN,kBAEMA,WAFN;AAAA,QAEmBC,UAFnB,kBAEmBA,UAFnB;;AAGnB,QAAMC,MAAM,GAACX,SAAS,GAAGW,MAAzB;AAEAb,EAAAA,SAAS,CACL,MAAI;AACA,UAAMc,WAAW,GAAG,YAAU;AAC1B,UAAG;AACC,cAAMC,YAAY,GAAE,MAAMJ,WAAW,CAChC,yCAAwCE,MAAO,EADf,EAEjC,KAFiC,CAArC;AAKAL,QAAAA,eAAe,CAACO,YAAD,CAAf;AACH,OAPD,CAOC,OAAMC,GAAN,EAAU,CAEV;AACJ,KAXD;;AAYAF,IAAAA,WAAW;AACd,GAfI,EAgBR,CAACH,WAAD,EAAaE,MAAb,CAhBQ,CAAT;AAkBA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,KAAnB;AAA0B,IAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAKH,CA5BD;;AA8BA,eAAeF,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport {useParams} from 'react-router-dom';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIEelements/ErrorModal'\n\nconst UserPlaces = ()=>{9\n    const [loadedPlaces,setLoadedPlaces]= useState();\n    const {isLoading, error, sendRequest, clearError} = useHttpClient()\n    const userId=useParams().userId;\n\n    useEffect(\n        ()=>{\n            const fetchPlaces = async ()=>{\n                try{\n                    const responseData =await sendRequest(\n                        `http://localhost:5000/api/places/user/${userId}`,\n                        'GET',\n\n                    );\n                    setLoadedPlaces(responseData);\n                }catch(err){\n\n                }\n            }\n            fetchPlaces();\n        }\n    ,[sendRequest,userId]);\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <PlaceList items={loadedPlaces}/>\n        </React.Fragment>)\n}\n\nexport default UserPlaces;"]},"metadata":{},"sourceType":"module"}