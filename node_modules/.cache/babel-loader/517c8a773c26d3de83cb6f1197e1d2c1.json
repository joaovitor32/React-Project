{"ast":null,"code":"var _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/App.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport Auth from './user/pages/Auth';\nimport AuthContext from './shared/context/auth-context';\n\nconst App = () => {\n  let routes;\n\n  if (token) {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(UserPlaces, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(NewPlace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/places/:placeId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(UpdatePlace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  } else {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(UserPlaces, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Auth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      login: login,\n      logout: logout,\n      userId: userId\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, routes)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/App.js"],"names":["React","useState","useCallback","useEffect","BrowserRouter","Router","Route","Redirect","Switch","Users","NewPlace","UserPlaces","MainNavigation","UpdatePlace","useAuth","Auth","AuthContext","App","routes","token","isLoggedIn","login","logout","userId"],"mappings":"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","sourcesContent":["import React ,{useState,useCallback,useEffect} from 'react';\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport UpdatePlace from './places/pages/UpdatePlace';\n\nimport { useAuth} from './shared/hooks/auth-hook';\n\nimport Auth from './user/pages/Auth';\n\nimport AuthContext from './shared/context/auth-context'\n\nconst App=()=> {\n\n\n  let routes;\n\n  if(token){\n    routes=(\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n          </Route>\n          <Route path=\"/places/:placeId\">\n              <UpdatePlace />\n          </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }else{\n    routes=(\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n              <Auth />\n            </Route>\n          <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn:!!token,token:token , login: login, logout: logout, userId:userId}}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n            {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}