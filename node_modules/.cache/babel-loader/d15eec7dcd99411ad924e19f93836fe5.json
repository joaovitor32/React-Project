{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/UserPlaces.js\";\nimport React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  9;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadedPlaces = _useState2[0],\n        setLoadedPlaces = _useState2[1];\n\n  const _useHttpClient = useHttpClient(),\n        isLoading = _useHttpClient.isLoading,\n        error = _useHttpClient.error,\n        sendRequest = _useHttpClient.sendRequest,\n        clearError = _useHttpClient.clearError;\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest();\n        setLoadedPlaces(responseData);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest]);\n  return React.createElement(PlaceList, {\n    items: loadedPlaces,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/UserPlaces.js"],"names":["React","useEffect","PlaceList","useParams","useHttpClient","UserPlaces","useState","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAI;AAAC;;AAAD,oBACmBC,QAAQ,EAD3B;AAAA;AAAA,QACZC,YADY;AAAA,QACCC,eADD;;AAAA,yBAEiCJ,aAAa,EAF9C;AAAA,QAEZK,SAFY,kBAEZA,SAFY;AAAA,QAEDC,KAFC,kBAEDA,KAFC;AAAA,QAEMC,WAFN,kBAEMA,WAFN;AAAA,QAEmBC,UAFnB,kBAEmBA,UAFnB;;AAGnB,QAAMC,MAAM,GAACV,SAAS,GAAGU,MAAzB;AAEAZ,EAAAA,SAAS,CACL,MAAI;AACA,UAAMa,WAAW,GAAG,YAAU;AAC1B,UAAG;AACC,cAAMC,YAAY,GAAE,MAAMJ,WAAW,EAArC;AACAH,QAAAA,eAAe,CAACO,YAAD,CAAf;AACH,OAHD,CAGC,OAAMC,GAAN,EAAU,CAEV;AACJ,KAPD;;AAQAF,IAAAA,WAAW;AACd,GAXI,EAYR,CAACH,WAAD,CAZQ,CAAT;AAcA,SAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CApBD;;AAsBA,eAAeF,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport {useParams} from 'react-router-dom';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\n\nconst UserPlaces = ()=>{9\n    const [loadedPlaces,setLoadedPlaces]= useState();\n    const {isLoading, error, sendRequest, clearError} = useHttpClient()\n    const userId=useParams().userId;\n\n    useEffect(\n        ()=>{\n            const fetchPlaces = async ()=>{\n                try{\n                    const responseData =await sendRequest();\n                    setLoadedPlaces(responseData);\n                }catch(err){\n\n                }\n            }\n            fetchPlaces();\n        }\n    ,[sendRequest]);\n\n    return <PlaceList items={loadedPlaces}/> \n}\n\nexport default UserPlaces;"]},"metadata":{},"sourceType":"module"}