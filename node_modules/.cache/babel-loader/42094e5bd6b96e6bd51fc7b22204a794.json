{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/UserPlaces.js\";\nimport React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  9;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadePlaces = _useState2[0],\n        setLoadedPlaces = _useState2[1];\n\n  const _useHttpClient = useHttpClient(),\n        isLoading = _useHttpClient.isLoading,\n        error = _useHttpClient.error,\n        sendRequest = _useHttpClient.sendRequest,\n        clearError = _useHttpClient.clearError;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      sendRequest();\n    };\n\n    fetchPlaces();\n  }, [sendRequest]);\n  const userId = useParams().userId;\n  const loadedPlaces = DUMMY_PLACES.filter(place => place.creator === userId);\n  return React.createElement(PlaceList, {\n    items: loadedPlaces,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/UserPlaces.js"],"names":["React","useEffect","PlaceList","useParams","useHttpClient","UserPlaces","useState","loadePlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","fetchPlaces","userId","loadedPlaces","DUMMY_PLACES","filter","place","creator"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAI;AAAC;;AAAD,oBACkBC,QAAQ,EAD1B;AAAA;AAAA,QACZC,WADY;AAAA,QACAC,eADA;;AAAA,yBAEiCJ,aAAa,EAF9C;AAAA,QAEZK,SAFY,kBAEZA,SAFY;AAAA,QAEDC,KAFC,kBAEDA,KAFC;AAAA,QAEMC,WAFN,kBAEMA,WAFN;AAAA,QAEmBC,UAFnB,kBAEmBA,UAFnB;;AAInBX,EAAAA,SAAS,CACL,MAAI;AACA,UAAMY,WAAW,GAAG,YAAU;AAC1BF,MAAAA,WAAW;AACd,KAFD;;AAGAE,IAAAA,WAAW;AACd,GANI,EAOR,CAACF,WAAD,CAPQ,CAAT;AASA,QAAMG,MAAM,GAACX,SAAS,GAAGW,MAAzB;AACA,QAAMC,YAAY,GAACC,YAAY,CAACC,MAAb,CAAoBC,KAAK,IAAEA,KAAK,CAACC,OAAN,KAAgBL,MAA3C,CAAnB;AACA,SAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAhBD;;AAkBA,eAAeV,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PlaceList from '../components/PlaceList';\nimport {useParams} from 'react-router-dom';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\n\nconst UserPlaces = ()=>{9\n    const [loadePlaces,setLoadedPlaces]= useState();\n    const {isLoading, error, sendRequest, clearError} = useHttpClient()\n\n    useEffect(\n        ()=>{\n            const fetchPlaces = async ()=>{\n                sendRequest();\n            }\n            fetchPlaces();\n        }\n    ,[sendRequest]);\n\n    const userId=useParams().userId;\n    const loadedPlaces=DUMMY_PLACES.filter(place=>place.creator===userId);\n    return <PlaceList items={loadedPlaces}/> \n}\n\nexport default UserPlaces;"]},"metadata":{},"sourceType":"module"}