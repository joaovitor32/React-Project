{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/user/pages/Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n  useEffect(() => {\n    const _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          isLoading = _useState2[0],\n          setIsLoading = _useState2[1];\n\n    const _useState3 = useState(),\n          _useState4 = _slicedToArray(_useState3, 2),\n          error = _useState4[0],\n          setError = _useState4[1];\n\n    const _useState5 = useState(),\n          _useState6 = _slicedToArray(_useState5, 2),\n          loadedUsers = _useState6[0],\n          setLoadedUsers = _useState6[1];\n\n    const sendRequest = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/users');\n      const responseData = await response.json();\n      setLoadedUsers(responseData.users);\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n  return React.createElement(UsersList, {\n    items: USERS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/user/pages/Users.js"],"names":["React","useEffect","useState","UsersList","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","users","USERS"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,MAAMC,KAAK,GAAC,MAAI;AACZH,EAAAA,SAAS,CAAC,MAAI;AAAA,sBAEqBC,QAAQ,CAAC,KAAD,CAF7B;AAAA;AAAA,UAEHG,SAFG;AAAA,UAEOC,YAFP;;AAAA,uBAGaJ,QAAQ,EAHrB;AAAA;AAAA,UAGHK,KAHG;AAAA,UAGGC,QAHH;;AAAA,uBAIyBN,QAAQ,EAJjC;AAAA;AAAA,UAIHO,WAJG;AAAA,UAISC,cAJT;;AAMV,UAAMC,WAAW,GAAC,YAAU;AACxBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMM,QAAQ,GAAE,MAAMC,KAAK,CAAC,iCAAD,CAA3B;AACA,YAAMC,YAAY,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAA1B;AAEAL,MAAAA,cAAc,CAACI,YAAY,CAACE,KAAd,CAAd;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD;;AAQAK,IAAAA,WAAW;AACd,GAfQ,EAeP,EAfO,CAAT;AAgBA,SAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEM,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAlBD;;AAoBA,eAAeb,KAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport UsersList from '../components/UsersList';\n\n\nconst Users=()=>{\n    useEffect(()=>{\n\n        const [isLoading,setIsLoading]=useState(false);\n        const [error,setError]=useState();\n        const [loadedUsers,setLoadedUsers]=useState();\n\n        const sendRequest=async ()=>{\n            setIsLoading(true);\n            const response= await fetch('http://localhost:5000/api/users');\n            const responseData= await response.json(); \n        \n            setLoadedUsers(responseData.users);\n            setIsLoading(false);\n        }\n        sendRequest();\n    },[]);\n    return <UsersList items={USERS}/>\n};  \n\nexport default Users;"]},"metadata":{},"sourceType":"module"}