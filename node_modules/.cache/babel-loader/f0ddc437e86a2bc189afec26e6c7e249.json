{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/NewPlace.js\";\nimport React, { useContext } from 'react';\nimport './PlaceForm.css';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/components/util/Validators';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport AuthContext from '../../shared/context/auth-context';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n\n  const _useHttpClient = useHttpClient(),\n        isLoading = _useHttpClient.isLoading,\n        error = _useHttpClient.error,\n        sendRequest = _useHttpClient.sendRequest,\n        clearError = _useHttpClient.clearError;\n\n  const _useForm = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: \"\",\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 2),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1];\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest('http://localhost:5000/api/places', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: fprmState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: auth.userId\n      }));\n    } catch (err) {}\n  };\n\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/NewPlace.js"],"names":["React","useContext","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Input","Button","useHttpClient","useForm","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","title","value","isValid","description","address","formState","inputHandler","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","fprmState","creator","userId","err"],"mappings":"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","sourcesContent":["import React,{useContext}  from 'react';\n\n\nimport './PlaceForm.css';\n\nimport {VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH} from '../../shared/components/util/Validators';\n\nimport Input from '../../shared/components/FormElements/Input'\nimport Button from '../../shared/components/FormElements/Button'\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport {useForm} from '../../shared/hooks/form-hook'\nimport AuthContext from '../../shared/context/auth-context'\n\nconst NewPlace = () => {\n    const auth=useContext(AuthContext);\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\n    const [formState,inputHandler]=useForm({\n      title:{\n        value:\"\",\n        isValid:false\n      },\n      description:{\n        value:'',\n        isValid:false\n      },\n      address:{\n        value:\"\",\n        isValid:false,\n      }\n    },false)\n    \n    const placeSubmitHandler=async event=>{\n      event.preventDefault();\n      try{\n        await sendRequest('http://localhost:5000/api/places','POST',JSON.stringify({\n          title:formState.inputs.title.value,\n          description:fprmState.inputs.description.value,\n          address:formState.inputs.address.value,\n          creator: auth.userId,\n        }));\n      }catch(err){\n        \n      }\n    }\n\n    return (\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    );\n  };\n  \n  export default NewPlace;"]},"metadata":{},"sourceType":"module"}