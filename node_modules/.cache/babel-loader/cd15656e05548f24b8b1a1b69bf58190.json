{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/user/pages/Auth.js\";\nimport React from 'react';\nimport './Auth.css';\nimport Card from '../../shared/components/UIEelements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/components/util/Validators';\nimport { useForm } from '../../shared/hooks/form-hook';\n\nconst Auth = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoginMode = _useState2[0],\n        setIsLoginMode = _useState2[1];\n\n  const _useForm = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 2),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1];\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), React.createElement(Button, {\n    inverse: true,\n    onclick: swicthModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Switch to signup\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/user/pages/Auth.js"],"names":["React","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","Auth","useState","isLoginMode","setIsLoginMode","email","value","isValid","password","formState","inputHandler","switchModeHandler","prevMode","authSubmitHandler","event","preventDefault","console","log","inputs","swicthModeHandler"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP;AAEA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAAQC,eAAR,EAAwBC,mBAAxB,QAAkD,yCAAlD;AACA,SAAQC,OAAR,QAAsB,8BAAtB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAEoBC,QAAQ,CAAC,IAAD,CAF5B;AAAA;AAAA,QAERC,WAFQ;AAAA,QAEIC,cAFJ;;AAAA,mBAImBJ,OAAO,CACvC;AACEK,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADT;AAKEC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,OAAO,EAAE;AAFD;AALZ,GADuC,EAWvC,KAXuC,CAJ1B;AAAA;AAAA,QAIRE,SAJQ;AAAA,QAIGC,YAJH;;AAkBf,QAAMC,iBAAiB,GAAC,MAAI;AACxBP,IAAAA,cAAc,CAACQ,QAAQ,IAAE,CAACA,QAAZ,CAAd;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACS,MAAtB;AACD,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,QAAQ,EAAEL,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,UAAU,EAAE,CAACf,eAAe,EAAhB,CALd;AAME,IAAA,SAAS,EAAC,qCANZ;AAOE,IAAA,OAAO,EAAEY,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,UAAU,EAAE,CAACX,mBAAmB,CAAC,CAAD,CAApB,CALd;AAME,IAAA,SAAS,EAAC,uDANZ;AAOE,IAAA,OAAO,EAAEW,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACD,SAAS,CAACF,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,GAAC,OAAD,GAAS,QADvB,CAnBF,CAHF,EA0BE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEgB,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BF,CADF;AA8BD,CAzDH;;AA2DE,eAAelB,IAAf","sourcesContent":["import React from 'react';\n\nimport './Auth.css';\n\nimport Card from '../../shared/components/UIEelements/Card'\nimport Input from '../../shared/components/FormElements/Input'\nimport Button from '../../shared/components/FormElements/Button'\nimport {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH} from '../../shared/components/util/Validators'\nimport {useForm} from '../../shared/hooks/form-hook'\n\n\nconst Auth = () => {\n    \n    const [isLoginMode,setIsLoginMode]=useState(true);\n    \n    const [formState, inputHandler] = useForm(\n      {\n        email: {\n          value: '',\n          isValid: false\n        },\n        password: {\n          value: '',\n          isValid: false\n        }\n      },\n      false\n    );\n  \n    const switchModeHandler=()=>{\n        setIsLoginMode(prevMode=>!prevMode);\n    } \n\n    const authSubmitHandler = event => {\n      event.preventDefault();\n      console.log(formState.inputs);\n    };\n  \n    return (\n      <Card className=\"authentication\">\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode?'LOGIN':'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onclick={swicthModeHandler}>Switch to signup</Button>\n      </Card>\n    );\n  };\n  \n  export default Auth;"]},"metadata":{},"sourceType":"module"}