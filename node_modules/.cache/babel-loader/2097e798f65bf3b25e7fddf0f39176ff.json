{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useCallback, useEffect } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tokenExpirationDate = _useState4[0],\n        setExpirationDate = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userId = _useState6[0],\n        setUserId = _useState6[1];\n\n  const login = useCallback((userId, token, expirationDate) => {\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: userId,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n    setUserId(userId);\n    setToken(token);\n  }, []);\n  const logout = useCallback(() => {\n    setToken(false);\n    setUserId(null);\n    setTokenExpiration(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/shared/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setExpirationDate","userId","setUserId","login","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","setTokenExpiration","removeItem","storedData","parse","getItem","remainingTime","setTimeout","clearTimeout"],"mappings":";AAAA,SAASA,QAAT,EAAkBC,WAAlB,EAA8BC,SAA9B,QAA+C,OAA/C;AAEA,IAAIC,WAAJ;AAEA,OAAO,MAAMC,OAAO,GAAC,MAAI;AAAA,oBACEJ,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,QACdK,KADc;AAAA,QACRC,QADQ;;AAAA,qBAEyBN,QAAQ,EAFjC;AAAA;AAAA,QAEdO,mBAFc;AAAA,QAEMC,iBAFN;;AAAA,qBAGIR,QAAQ,CAAC,KAAD,CAHZ;AAAA;AAAA,QAGdS,MAHc;AAAA,QAGPC,SAHO;;AAKrB,QAAMC,KAAK,GAACV,WAAW,CAAC,CAACQ,MAAD,EAAQJ,KAAR,EAAcO,cAAd,KAA+B;AACrD,UAAML,mBAAmB,GAACK,cAAc,IAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAqB,OAAK,EAAL,GAAQ,EAAtC,CAA1C;AACAN,IAAAA,iBAAiB,CAACD,mBAAD,CAAjB;AACAQ,IAAAA,YAAY,CAACC,OAAb,CACE,UADF,EAEEC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,MAAM,EAACA,MAAR;AAAeJ,MAAAA,KAAK,EAACA,KAArB;AAA2Bc,MAAAA,UAAU,EAACZ,mBAAmB,CAACa,WAApB;AAAtC,KAAf,CAFF;AAIAV,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GATsB,EASrB,EATqB,CAAvB;AAWA,QAAMgB,MAAM,GAACpB,WAAW,CAAC,MAAI;AAC3BK,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAY,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACD,GALuB,EAKtB,EALsB,CAAxB;AAOArB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMsB,UAAU,GAACP,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,UAArB,CAAX,CAAjB;;AACA,QAAGF,UAAU,IAAIA,UAAU,CAACnB,KAAzB,IAAkC,IAAIQ,IAAJ,CAASW,UAAU,CAACL,UAApB,IAAgC,IAAIN,IAAJ,EAArE,EAAgF;AAC9EF,MAAAA,KAAK,CAACa,UAAU,CAACf,MAAZ,EAAmBe,UAAU,CAACnB,KAA9B,EAAoC,IAAIQ,IAAJ,CAASW,UAAU,CAACL,UAApB,CAApC,CAAL;AACD;AACF,GALQ,EAKP,CAACR,KAAD,CALO,CAAT;AAOAT,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGG,KAAK,IAAIE,mBAAZ,EAAgC;AAC9B,YAAMoB,aAAa,GAACpB,mBAAmB,CAACO,OAApB,KAA8B,IAAID,IAAJ,GAAWC,OAAX,EAAlD;AACAX,MAAAA,WAAW,GAACyB,UAAU,CAACP,MAAD,EAAQM,aAAR,CAAtB;AACD,KAHD,MAGK;AACHE,MAAAA,YAAY,CAAC1B,WAAD,CAAZ;AACD;AACF,GAPQ,EAOP,CAACE,KAAD,EAAOgB,MAAP,CAPO,CAAT;AASA,SAAO;AAAChB,IAAAA,KAAD;AAAOM,IAAAA,KAAP;AAAaU,IAAAA,MAAb;AAAoBZ,IAAAA;AAApB,GAAP;AACH,CAxCM","sourcesContent":["import { useState,useCallback,useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth=()=>{\n    const [token,setToken]=useState(false);\n    const [tokenExpirationDate,setExpirationDate]=useState();\n    const [userId,setUserId]=useState(false);\n  \n    const login=useCallback((userId,token,expirationDate)=>{\n      const tokenExpirationDate=expirationDate||new Date(new Date().getTime()+1000*60*60);\n      setExpirationDate(tokenExpirationDate);\n      localStorage.setItem(\n        'userData',\n        JSON.stringify({userId:userId,token:token,expiration:tokenExpirationDate.toISOString()})\n      );\n      setUserId(userId);\n      setToken(token);\n    },[])\n  \n    const logout=useCallback(()=>{\n      setToken(false);\n      setUserId(null);\n      setTokenExpiration(null);\n      localStorage.removeItem('userData');\n    },[])\n  \n    useEffect(()=>{\n      const storedData=JSON.parse(localStorage.getItem('userData'));\n      if(storedData && storedData.token && new Date(storedData.expiration)>new Date()){\n        login(storedData.userId,storedData.token,new Date(storedData.expiration));\n      }\n    },[login])\n  \n    useEffect(()=>{\n      if(token && tokenExpirationDate){\n        const remainingTime=tokenExpirationDate.getTime()-new Date().getTime();\n        logoutTimer=setTimeout(logout,remainingTime);\n      }else{\n        clearTimeout(logoutTimer);\n      }\n    },[token,logout]);\n    \n    return {token,login,logout,userId}\n}"]},"metadata":{},"sourceType":"module"}