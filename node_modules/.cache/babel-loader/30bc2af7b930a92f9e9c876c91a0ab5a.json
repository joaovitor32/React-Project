{"ast":null,"code":"import _slicedToArray from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/buzina/\\xC1rea de Trabalho/reactproject/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/buzina/\\xC1rea de Trabalho/reactproject/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport './NewPlace.css';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/components/util/Validators';\nimport Input from '../../shared/components/FormElements/Input';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId == action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        input: _objectSpread({}, state.inputs, {\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        }),\n        isValid: formIsValid\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const _useReducer = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: {\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        formState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const descriptionHandler = useCallback((id, value, isValid) => {}, []);\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    validators: [VALIDATOR_REQUIRE()],\n    label: \"Title\",\n    errorText: \"Please enter a valid title...\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    label: \"Title\",\n    errorText: \"Please enter a valid description (at least 5 characters)...\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/buzina/Área de Trabalho/reactproject/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Input","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","title","description","formState","dispatch","inputHandler","id","descriptionHandler"],"mappings":"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","sourcesContent":["import React,{useCallback,useReducer} from 'react';\n\nimport './NewPlace.css';\n\nimport {VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH} from '../../shared/components/util/Validators';\n\nimport Input from '../../shared/components/FormElements/Input'\n\nconst formReducer=(state,action)=>{\n    switch(action.type){\n        case 'INPUT_CHANGE':\n            let formIsValid=true;\n            for(const inputId in state.inputs){\n                if(inputId==action.inputId){\n                    formIsValid=formIsValid && action.isValid;\n                }else{\n                    formIsValid=formIsValid &&state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                input:{\n                    ...state.inputs,\n                    [action.inputId]:{value:action.value,isValid:action.isValid},\n                },\n                isValid:formIsValid\n            };\n        default:\n            return state;\n    }\n}\n\nconst NewPlace=()=>{\n\n    const [formState,dispatch]=useReducer(formReducer,{\n        inputs:{\n            title:{\n                value:'',\n                isValid:false\n            }\n        },\n        isValid:{\n            description:{\n                value:'',\n                isValid:false\n            }\n        },\n        isValid:false,\n    });\n\n    const inputHandler=useCallback((id,value,isValid)=>{\n        dispatch({type:'INPUT_CHANGE',value:value,isValid:isValid,inputId:id})\n    },[])\n\n    const descriptionHandler=useCallback((id,value,isValid)=>{\n        \n    },[])\n\n    return (<form className=\"place-form\">\n        <Input \n            id=\"title\"\n            element=\"input\" \n            type=\"text\" \n            validators={[VALIDATOR_REQUIRE()]} \n            label=\"Title\" \n            errorText=\"Please enter a valid title...\" \n            onInput={inputHandler}\n        /> \n         <Input \n            id=\"description\"\n            element=\"textarea\" \n            validators={[VALIDATOR_MINLENGTH(5)]} \n            label=\"Title\"\n            errorText=\"Please enter a valid description (at least 5 characters)...\" \n            onInput={inputHandler}\n        /> \n    </form>);\n};\n\nexport default NewPlace;"]},"metadata":{},"sourceType":"module"}